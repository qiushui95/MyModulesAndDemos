ext.deps = [:]

def deps = deps

def anko = [:]
anko.version = "0.10.7"
anko.common = "org.jetbrains.anko:anko-commons:$anko.version"
deps.anko = anko

def androidx = [:]
androidx.version = '1.0.0'
androidx.appcompat = "androidx.appcompat:appcompat:$androidx.version"
androidx.supportV4 = "androidx.legacy:legacy-support-v4:$androidx.version"
androidx.cardView = "androidx.cardview:cardview:$androidx.version"
androidx.material = "com.google.android.material:material:$androidx.version"
androidx.multiDex = "androidx.multidex:multidex:2.0.0"
deps.androidx = androidx

def bus = [:]
bus.eventBus = "org.greenrobot:eventbus:3.1.1"
bus.rxBus = "com.hwangjr.rxbus:rxbus:1.0.6"
deps.bus = bus

def bugout = [:]
bugout.base = "cn.testin.analysis:testin-data:5.0.9"
bugout.core = "cn.testin.analysis:bugout:1.0.6"
bugout.ndk = "cn.testin.analysis:bugout-ndk:1.0.0-beta"
deps.bugout = bugout

def coroutines = [:]
coroutines.version = "1.0.1"
coroutines.core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines.version"
coroutines.android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines.version"
deps.coroutines = coroutines

def room = [:]
room.version = "2.0.0"
room.runtime = "androidx.room:room-runtime:$room.version"
room.compiler = "androidx.room:room-compiler:$room.version"
room.rxJava = "androidx.room:room-rxjava2:$room.version"
room.testing = "androidx.room:room-testing:$room.version"
deps.room = room

def lifecycle = [:]
lifecycle.version = "2.0.0"
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$lifecycle.version"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$lifecycle.version"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$lifecycle.version"
deps.lifecycle = lifecycle

def leakCanary = [:]
leakCanary.version = "1.6.2"
leakCanary.debug = "com.squareup.leakcanary:leakcanary-android:$leakCanary.version"
leakCanary.release = "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanary.version"
leakCanary.fragment = "com.squareup.leakcanary:leakcanary-support-fragment:$leakCanary.version"
deps.leakCanary = leakCanary

def okHttp = [:]
okHttp.logging = "com.squareup.okhttp3:logging-interceptor:3.11.0"
okHttp.chuckVersion = "1.1.0"
okHttp.chuckDebug = "com.readystatesoftware.chuck:library:$okHttp.chuckVersion"
okHttp.chuckRelease = "com.readystatesoftware.chuck:library-no-op:$okHttp.chuckVersion"
okHttp.progressManager = "me.jessyan:progressmanager:1.5.0"
deps.okHttp = okHttp

def koin = [:]
koin.version = "1.0.1"
koin.core = "org.koin:koin-androidx-scope:$koin.version"
koin.viewModel = "org.koin:koin-androidx-viewmodel:$koin.version"
deps.koin = koin

def retrofit = [:]
retrofit.version = "2.4.0"
retrofit.runtime = "com.squareup.retrofit2:retrofit:$retrofit.version"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$retrofit.version"
retrofit.rxJava2 = "com.squareup.retrofit2:adapter-rxjava2:$retrofit.version"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$retrofit.version"
retrofit.coroutines = "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"
deps.retrofit = retrofit

def dagger = [:]
dagger.version = "2.19"
dagger.runtime = "com.google.dagger:dagger:$dagger.version"
dagger.android = "com.google.dagger:dagger-android:$dagger.version"
dagger.androidSupport = "com.google.dagger:dagger-android-support:$dagger.version"
dagger.compiler = "com.google.dagger:dagger-compiler:$dagger.version"
dagger.androidSupportCompiler = "com.google.dagger:dagger-android-processor:$dagger.version"
deps.dagger = dagger

def kotlin = [:]
kotlin.version = "1.3.0"
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin.version"
kotlin.reflect = "org.jetbrains.kotlin:kotlin-reflect:$kotlin.version"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$kotlin.version"
deps.kotlin = kotlin

def ktx = [:]
ktx.core = "androidx.core:core-ktx:1.0.0"
deps.ktx = ktx

def glide = [:]
glide.version = "4.8.0"
glide.core = "com.github.bumptech.glide:glide:$glide.version"
glide.compiler = "com.github.bumptech.glide:compiler:$glide.version"
glide.okHttp = "com.github.bumptech.glide:okhttp3-integration:$glide.version"
deps.glide = glide

def view = [:]
view.constraintLayout = "androidx.constraintlayout:constraintlayout:1.1.3"
view.flexBox = "com.google.android:flexbox:1.0.0"
view.photoView = "com.github.chrisbanes:PhotoView:2.2.0"
view.gestureView = "com.alexvasilkov:gesture-views:2.5.2"
deps.view = view

def smartRefresh = [:]
smartRefresh.version = "1.1.0-alpha-14"
smartRefresh.core = "com.scwang.smartrefresh:SmartRefreshLayout:$smartRefresh.version"
smartRefresh.header = "com.scwang.smartrefresh:SmartRefreshHeader:$smartRefresh.version"
deps.smartRefresh = smartRefresh

def rx = [:]
rx.java = "io.reactivex.rxjava2:rxjava:2.2.3"
rx.kotlin = "io.reactivex.rxjava2:rxkotlin:2.3.0"
rx.android = "io.reactivex.rxjava2:rxandroid:2.1.0"
deps.rx = rx

def rxBinding = [:]
rxBinding.version = "2.2.0"
rxBinding.core = "com.jakewharton.rxbinding2:rxbinding-kotlin:$rxBinding.version"
rxBinding.bindingDesign = "com.jakewharton.rxbinding2:rxbinding-design:$rxBinding.version"
rxBinding.bindingRecycler = "com.jakewharton.rxbinding2:rxbinding-recyclerview:$rxBinding.version"
rxBinding.bindingV4 = "com.jakewharton.rxbinding2:rxbinding-support-v4:$rxBinding.version"
rxBinding.bindingV7 = "com.jakewharton.rxbinding2:rxbinding-appcompat-v7:$rxBinding.version"
deps.rxBinding = rxBinding

def autoDispose = [:]
autoDispose.version = "1.0.0"
autoDispose.core = "com.uber.autodispose:autodispose-ktx:$autoDispose.version"
autoDispose.android = "com.uber.autodispose:autodispose-android-ktx:$autoDispose.version"
autoDispose.androidArchcomponents = "com.uber.autodispose:autodispose-android-archcomponents-ktx:$autoDispose.version"
deps.autoDispose = autoDispose

def navigation = [:]
navigation.version = "1.0.0-alpha07"
navigation.runtime = "android.arch.navigation:navigation-runtime:$navigation.version"
navigation.runtimeKtx = "android.arch.navigation:navigation-runtime-ktx:$navigation.version"
navigation.fragment = "android.arch.navigation:navigation-fragment:$navigation.version"
navigation.fragmentKtx = "android.arch.navigation:navigation-fragment-ktx:$navigation.version"
navigation.testingKtx = "android.arch.navigation:navigation-testing-ktx:$navigation.version"
deps.navigation = navigation

def test = [:]
test.atslRunnerVersion = "1.1.0"
test.runner = "androidx.test:runner:$test.atslRunnerVersion"
test.rules = "androidx.test:rules:$test.atslRunnerVersion"
test.espressoVersion = "3.1.0"
test.core = "androidx.test.espresso:espresso-core:$test.espressoVersion"
test.contrib = "androidx.test.espresso:espresso-contrib:$test.espressoVersion"
test.intents = "androidx.test.espresso:espresso-intents:$test.espressoVersion"
test.junit = "junit:junit:4.12"
deps.test = test

def classpath = [:]
classpath.androidGradlePlugin = "com.android.tools.build:gradle:3.2.1"
classpath.kotlin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin.version"
classpath.allOpen = "org.jetbrains.kotlin:kotlin-allopen:$kotlin.version"
classpath.noArg = "org.jetbrains.kotlin:kotlin-noarg:$kotlin.version"
classpath.navigationSafeArgs = "android.arch.navigation:navigation-safe-args-gradle-plugin:$navigation.version"
deps.classpath = classpath

def recyclerView = [:]
recyclerView.recyclerView = "androidx.recyclerview:recyclerview:$androidx.version"
recyclerView.multitypeVersion = "3.5.0"
recyclerView.multiType = "me.drakeet.multitype:multitype:$recyclerView.multitypeVersion"
recyclerView.multiTypeKtx = "me.drakeet.multitype:multitype-ktx:$recyclerView.multitypeVersion"
deps.recyclerView = recyclerView

def paging = [:]
paging.version = "2.0.0"
paging.runtime = "androidx.paging:paging-runtime:$paging.version"
paging.common = "androidx.paging:paging-common:$paging.version"
paging.rxjava2 = "androidx.paging:paging-rxjava2:$paging.version"
deps.paging = paging

def dialog = [:]
dialog.datePicker = "com.wdullaer:materialdatetimepicker:3.6.3"
deps.dialog = dialog

def utils = [:]
utils.logger = "com.orhanobut:logger:2.2.0"
utils.joda = "joda-time:joda-time:2.10.1"
utils.autoSize = "me.jessyan:autosize:1.0.1"
utils.background = "com.noober.background:core:1.3.4"
utils.rxPermission = "com.github.tbruyelle:rxpermissions:0.10.2"
utils.easyPermission = "pub.devrel:easypermissions:2.0.0"
utils.gson = "com.google.code.gson:gson:2.8.5"
utils.mmkv = "com.tencent:mmkv:1.0.12"
utils.immersionBar = "com.gyf.immersionbar:immersionbar:2.3.2-beta01"
utils.album = "com.yanzhenjie:album:2.1.3"
utils.randomColor = "com.github.lzyzsd.randomcolor:library:1.0.0"
deps.utils = utils

def rxImagePicker = [:]
rxImagePicker.version = "2.3.0-alpha03"
rxImagePicker.core = "com.github.qingmei2:rximagepicker:$rxImagePicker.version"
rxImagePicker.support = "com.github.qingmei2:rximagepicker_support:$rxImagePicker.version"
rxImagePicker.zhihu = "com.github.qingmei2:rximagepicker_support_zhihu:$rxImagePicker.version"
rxImagePicker.wechat = "com.github.qingmei2:rximagepicker_support_wechat:$rxImagePicker.version"
deps.rxImagePicker = rxImagePicker

ext.deps = deps

def buildVersions = [:]
buildVersions.minSdk = 19
buildVersions.targetSdk = 28
buildVersions.buildTools = "28.0.3"
ext.buildVersions = buildVersions

